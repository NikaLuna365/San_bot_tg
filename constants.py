# constants.py
import os
from enum import Enum, auto
from telegram import ReplyKeyboardMarkup

# --- Состояния ConversationHandler ---
class State(Enum):
    # Test States
    TEST_FIXED_1 = auto()
    TEST_FIXED_2 = auto()
    TEST_FIXED_3 = auto()
    TEST_FIXED_4 = auto()
    TEST_FIXED_5 = auto()
    TEST_FIXED_6 = auto()
    TEST_OPEN_1 = auto()
    TEST_OPEN_2 = auto()
    GEMINI_CHAT_TEST = auto()

    # Retrospective States
    RETRO_CHOICE = auto()
    RETRO_PERIOD_CHOICE = auto()
    RETRO_OPEN_1 = auto()
    RETRO_OPEN_2 = auto()
    RETRO_OPEN_3 = auto()
    RETRO_OPEN_4 = auto()
    GEMINI_CHAT_RETRO = auto()

    # Reminder States
    REMINDER_CHOICE = auto()
    REMINDER_DAILY_TIME = auto()
    REMINDER_DAILY_REMIND = auto()

    # Schedule Retrospective States
    SCHEDULE_START = auto() # Новая точка входа для планирования
    SCHEDULE_DAY_NEW = auto()
    SCHEDULE_CURRENT_TIME = auto() # Переименовано для ясности
    SCHEDULE_TARGET_TIME = auto()  # Переименовано для ясности
    SCHEDULE_MODE = auto()

    # Timezone State
    SET_TIMEZONE_ASK = auto()


# --- Тексты Вопросов ---

# !!! ВАЖНО: Заполните вопросы для дней 2-6 уникальными значениями !!!
WEEKDAY_FIXED_QUESTIONS = {
    0: [ # Понедельник
        "1. Оцените, насколько ваше самочувствие сегодня ближе к хорошему или плохому (при 1 – крайне плохое самочувствие, а 7 – превосходное самочувствие)",
        "2. Оцените, чувствуете ли вы себя сильным или слабым (при 1 – чрезвычайно слабым, а 7 – исключительно сильным)",
        "3. Оцените свою активность: насколько вы ощущаете себя пассивным или активным (при 1 – крайне пассивным, а 7 – исключительно активным)",
        "4. Оцените вашу подвижность: насколько вы ощущаете себя малоподвижным или подвижным (при 1 – крайне малоподвижным, а 7 – чрезвычайно подвижным)",
        "5. Оцените ваше эмоциональное состояние: насколько вы чувствуете себя весёлым или грустным (при 1 – крайне грустным, а 7 – исключительно весёлым)",
        "6. Оцените ваше настроение: насколько оно ближе к хорошему или плохому (при 1 – очень плохое настроение, а 7 – прекрасное настроение)",
    ],
    1: [ # Вторник
        "1. Оцените свою работоспособность: насколько вы чувствуете себя работоспособным или разбитым (при 1 – совершенно разбитым, а 7 – на пике работоспособности)",
        "2. Оцените уровень своих сил: чувствуете ли вы себя полным сил или обессиленным (при 1 – абсолютно обессиленным, а 7 – полон энергии)",
        "3. Оцените скорость ваших мыслей или действий: насколько вы ощущаете себя медлительным или быстрым (при 1 – крайне медлительным, а 7 – исключительно быстрым)",
        "4. Оцените вашу активность: насколько вы чувствуете себя бездеятельным или деятельным (при 1 – полностью бездеятельным, а 7 – очень деятельным)",
        "5. Оцените своё счастье: насколько вы ощущаете себя счастливым или несчастным (при 1 – крайне несчастным, а 7 – чрезвычайно счастливым)",
        "6. Оцените вашу жизнерадостность: насколько вы чувствуете себя жизнерадостным или мрачным (при 1 – полностью мрачным, а 7 – исключительно жизнерадостным)",
    ],
    # ЗАПОЛНИТЕ ЭТИ ДНИ УНИКАЛЬНЫМИ ВОПРОСАМИ
    2: [ # Среда - ЗАГЛУШКА (используются вопросы Понедельника)
        "1. [Среда] Оцените, насколько ваше самочувствие сегодня ближе к хорошему или плохому (1–7)",
        "2. [Среда] Оцените, чувствуете ли вы себя сильным или слабым (1–7)",
        "3. [Среда] Оцените свою активность: пассивным или активным (1–7)",
        "4. [Среда] Оцените вашу подвижность: малоподвижным или подвижным (1–7)",
        "5. [Среда] Оцените ваше эмоциональное состояние: весёлым или грустным (1–7)",
        "6. [Среда] Оцените ваше настроение: хорошему или плохому (1–7)",
    ],
    3: [ # Четверг - ЗАГЛУШКА (используются вопросы Вторника)
        "1. [Четверг] Оцените свою работоспособность: работоспособным или разбитым (1–7)",
        "2. [Четверг] Оцените уровень своих сил: полным сил или обессиленным (1–7)",
        "3. [Четверг] Оцените скорость ваших мыслей/действий: медлительным или быстрым (1–7)",
        "4. [Четверг] Оцените вашу активность: бездеятельным или деятельным (1–7)",
        "5. [Четверг] Оцените своё счастье: счастливым или несчастным (1–7)",
        "6. [Четверг] Оцените вашу жизнерадостность: жизнерадостным или мрачным (1–7)",
    ],
     4: [ # Пятница - ЗАГЛУШКА (используются вопросы Понедельника)
        "1. [Пятница] Оцените, насколько ваше самочувствие сегодня ближе к хорошему или плохому (1–7)",
        "2. [Пятница] Оцените, чувствуете ли вы себя сильным или слабым (1–7)",
        "3. [Пятница] Оцените свою активность: пассивным или активным (1–7)",
        "4. [Пятница] Оцените вашу подвижность: малоподвижным или подвижным (1–7)",
        "5. [Пятница] Оцените ваше эмоциональное состояние: весёлым или грустным (1–7)",
        "6. [Пятница] Оцените ваше настроение: хорошему или плохому (1–7)",
    ],
    5: [ # Суббота - ЗАГЛУШКА (используются вопросы Вторника)
        "1. [Суббота] Оцените свою работоспособность: работоспособным или разбитым (1–7)",
        "2. [Суббота] Оцените уровень своих сил: полным сил или обессиленным (1–7)",
        "3. [Суббота] Оцените скорость ваших мыслей/действий: медлительным или быстрым (1–7)",
        "4. [Суббота] Оцените вашу активность: бездеятельным или деятельным (1–7)",
        "5. [Суббота] Оцените своё счастье: счастливым или несчастным (1–7)",
        "6. [Суббота] Оцените вашу жизнерадостность: жизнерадостным или мрачным (1–7)",
    ],
     6: [ # Воскресенье - ЗАГЛУШКА (используются вопросы Понедельника)
        "1. [Воскресенье] Оцените, насколько ваше самочувствие сегодня ближе к хорошему или плохому (1–7)",
        "2. [Воскресенье] Оцените, чувствуете ли вы себя сильным или слабым (1–7)",
        "3. [Воскресенье] Оцените свою активность: пассивным или активным (1–7)",
        "4. [Воскресенье] Оцените вашу подвижность: малоподвижным или подвижным (1–7)",
        "5. [Воскресенье] Оцените ваше эмоциональное состояние: весёлым или грустным (1–7)",
        "6. [Воскресенье] Оцените ваше настроение: хорошему или плохому (1–7)",
    ]
}

OPEN_QUESTIONS = [
    "7. Какие три слова лучше всего описывают ваше текущее состояние?",
    "8. Что больше всего повлияло на ваше состояние сегодня?",
]

RETRO_OPEN_QUESTIONS = [
    "1. Какие события за выбранный период больше всего повлияли на ваше общее состояние?",
    "2. Какие факторы способствовали вашей продуктивности, а какие, наоборот, мешали?",
    "3. Какие у вас были ожидания от этого периода, и насколько они оправдались?",
    "4. Какие уроки вы вынесли из прошедшего периода, и как вы планируете использовать этот опыт в будущем?",
]

# --- Клавиатуры ---

def build_fixed_keyboard() -> ReplyKeyboardMarkup:
    """Создает клавиатуру для вопросов с оценкой 1-7."""
    keyboard = [[str(i) for i in range(1, 8)], ["Главное меню"]]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

MAIN_MENU_KEYBOARD = ReplyKeyboardMarkup(
    [["Тест", "Ретроспектива"], ["Напоминание", "Помощь"], ["Настроить часовой пояс"]],
    resize_keyboard=True,
    one_time_keyboard=False # Главное меню лучше не делать одноразовым
)

CANCEL_KEYBOARD = ReplyKeyboardMarkup([["Главное меню"]], resize_keyboard=True, one_time_keyboard=True)

RETRO_CHOICE_KEYBOARD = ReplyKeyboardMarkup(
     [["Ретроспектива сейчас", "Запланировать"], ["Главное меню"]],
     resize_keyboard=True, one_time_keyboard=True
)

RETRO_NOW_PERIOD_KEYBOARD = ReplyKeyboardMarkup(
    [["За 1 неделю", "За 2 недели"], ["Главное меню"]],
     resize_keyboard=True, one_time_keyboard=True
)

REMINDER_TYPE_KEYBOARD = ReplyKeyboardMarkup(
    [["Ежедневный тест"], ["Главное меню"]], # Пока только ежедневный тест
    resize_keyboard=True, one_time_keyboard=True
)

SCHEDULE_DAYS_KEYBOARD = ReplyKeyboardMarkup(
    [["Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Вс"], ["Главное меню"]],
    resize_keyboard=True, one_time_keyboard=True
)

SCHEDULE_MODE_KEYBOARD = ReplyKeyboardMarkup(
    [["Еженедельная", "Двухнедельная"], ["Главное меню"]],
    resize_keyboard=True, one_time_keyboard=True
)

# --- Настройки ---
DATA_DIR = "data"
LOGS_DIR = "logs"

# Убедимся, что директории существуют
os.makedirs(DATA_DIR, exist_ok=True)
os.makedirs(LOGS_DIR, exist_ok=True)
